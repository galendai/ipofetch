# Ruff configuration for IPO Prospectus Fetcher
# See: https://docs.astral.sh/ruff/

# Basic settings
line-length = 88
target-version = "py38"
src = ["src", "tests"]
extend-exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[lint]
# Enable specific rule sets
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate
    "PL",    # pylint
    "RUF",   # ruff-specific rules
    "N",     # pep8-naming
    "D",     # pydocstyle
    "S",     # flake8-bandit (security)
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C90",   # mccabe complexity
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "TD",    # flake8-todos
    "FIX",   # flake8-fixme
    "ERA",   # eradicate
    "PD",    # pandas-vet
    "PGH",   # pygrep-hooks
    "PL",    # pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "NPY",   # numpy
    "AIR",   # airflow
    "PERF",  # perflint
    "FURB",  # refurb
    "LOG",   # flake8-logging
    "RUF",   # ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",    # line too long, handled by formatter
    "D100",    # missing docstring in public module
    "D104",    # missing docstring in public package
    "D107",    # missing docstring in __init__
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "S101",    # use of assert detected
    "TD002",   # missing author in TODO
    "TD003",   # missing issue link on line following TODO
    "FIX002",  # line contains TODO
    "COM812",  # trailing comma missing (conflicts with formatter)
    "ISC001",  # implicitly concatenated string literals (conflicts with formatter)
]

# Per-file ignores
[lint.per-file-ignores]
"tests/**/*" = [
    "ARG",     # unused function arguments
    "S101",    # use of assert detected
    "PLR2004", # magic value used in comparison
    "D",       # pydocstyle
    "ANN",     # type annotations
]
"src/ipofetch/__init__.py" = [
    "F401",    # imported but unused
]
"**/conftest.py" = [
    "D",       # pydocstyle
]

# Import sorting configuration
[lint.isort]
known-first-party = ["ipofetch"]
force-single-line = true
lines-after-imports = 2

# Docstring configuration
[lint.pydocstyle]
convention = "google"

# McCabe complexity
[lint.mccabe]
max-complexity = 10

# Pylint configuration
[lint.pylint]
max-args = 5
max-branches = 12
max-returns = 6
max-statements = 50

# Formatter configuration
[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"